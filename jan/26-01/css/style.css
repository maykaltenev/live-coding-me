.container {
  display: flex;
  justify-content: space-evenly;
  /* flex-direction: row;
  flex-wrap: wrap; */
  /* shorthand */
  flex-flow: row wrap;
  align-items: center;
  width: 40rem;
  height: 30rem;
  border: 2px black solid;
}
.child {
  width: 5rem;
  height: 8rem;
  color: white;
  margin-left: 1rem;
  border: 2px black solid;
}
.green {
  background-color: lightgreen;
}
.red {
  background-color: lightcoral;
}
.black {
  background-color: black;
}

/* special effects */
/*  order : sets the order to lay out an item in a flex */

/*  flex-grow : sets the flex grow facto, no negative numbers*/

/*  flex-shrink : sets the flex shrink factor of a flex item, no negative numbers*/

/* flex-wrap : sets whether flex items are forced onto one line or can wrap onto multiple lines */

/* flex-direction : sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed). */

/* 
 the shortcut 
  flex : sets how a flex item will grow or shrink to fit the space available in its flex container. 
 Three values: flex-grow | flex-shrink | flex-basis
 
 flex : 1 1 30rem
 
 */

/*  flex-basis : sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing. */
